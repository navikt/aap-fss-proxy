apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
    annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "250M"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "90"
        nais.io/read-only-file-system: "false"
        nais.io/run-as-user: "1001"
    name: fss-proxy
    namespace: aap
    labels:
        team: aap
spec:
    secureLogs:
        enabled: true
    accessPolicy:
        inbound:
            rules:
                -   application: postmottak-backend
                    cluster: {{env}}-gcp
                    namespace: aap
    azure:
        application:
            enabled: true
            tenant: {{tenant}}
    port: 8080
    image: {{image}}
    liveness:
        path: /actuator/health/liveness
        initialDelay: 60
    readiness:
        path: /actuator/health/readiness
        initialDelay: 60
    prometheus:
        enabled: true
        path: /actuator/prometheus
    observability:
        autoInstrumentation:
            enabled: true
            runtime: "java"
        logging:
            destinations:
                - id: elastic
    replicas:
        min: 2
        max: 2
        cpuThresholdPercentage: 50
    resources:
        limits:
            cpu: 1500m
            memory: 3072Mi
        requests:
            cpu: 250m
            memory: 1536Mi
    ingresses:
  {{#each ingresses as |url|}}
        - {{url}}
  {{/each}}
    envFrom:
        -   secret: srvaap-proxy
        -   secret: arenalogin
        -   secret: arenasoap
